import unittest
from vignere_decrypt import *


class vignereTest(unittest.TestCase):
    """Tests for vignere_decrypt.py"""
    def test1(self):
        self.assertEqual(freq2occ({
    "A" : 0.0817,
    "B" : 0.0149,
    "C" : 0.0278,
    "D" : 0.0425,
    "E" : 0.1270,
    "F" : 0.0223,
    "G" : 0.0202,
    "H" : 0.0609,
    "I" : 0.0697,
    "J" : 0.0015,
    "K" : 0.0077,
    "L" : 0.0403,
    "M" : 0.0241,
    "N" : 0.0675,
    "O" : 0.0751,
    "P" : 0.0193,
    "Q" : 0.0010,
    "R" : 0.0599,
    "S" : 0.0633,
    "T" : 0.0906,
    "U" : 0.0276,
    "V" : 0.0098,
    "W" : 0.0236,
    "X" : 0.0015,
    "Y" : 0.0197,
    "Z" : 0.0007,
            }, 1), {
    "A" : 0.0817,
    "B" : 0.0149,
    "C" : 0.0278,
    "D" : 0.0425,
    "E" : 0.1270,
    "F" : 0.0223,
    "G" : 0.0202,
    "H" : 0.0609,
    "I" : 0.0697,
    "J" : 0.0015,
    "K" : 0.0077,
    "L" : 0.0403,
    "M" : 0.0241,
    "N" : 0.0675,
    "O" : 0.0751,
    "P" : 0.0193,
    "Q" : 0.0010,
    "R" : 0.0599,
    "S" : 0.0633,
    "T" : 0.0906,
    "U" : 0.0276,
    "V" : 0.0098,
    "W" : 0.0236,
    "X" : 0.0015,
    "Y" : 0.0197,
    "Z" : 0.0007,
            })

    def test2(self):
        self.assertEqual(occurences("Qetuoadgjlxv"), {
    "A" : 1,
    "B" : 0,
    "C" : 0,
    "D" : 1,
    "E" : 1,
    "F" : 0,
    "G" : 1,
    "H" : 0,
    "I" : 0,
    "J" : 1,
    "K" : 0,
    "L" : 1,
    "M" : 0,
    "N" : 0,
    "O" : 1,
    "P" : 0,
    "Q" : 1,
    "R" : 0,
    "S" : 0,
    "T" : 1,
    "U" : 1,
    "V" : 1,
    "W" : 0,
    "X" : 1,
    "Y" : 0,
    "Z" : 0,
            })

    def test3(self):
        self.assertEqual(frequency("Qetuoadgjlxv"), {
    "A" : 0.083,
    "B" : 0,
    "C" : 0,
    "D" : 0.083,
    "E" : 0.083,
    "F" : 0,
    "G" : 0.083,
    "H" : 0,
    "I" : 0,
    "J" : 0.083,
    "K" : 0,
    "L" : 0.083,
    "M" : 0,
    "N" : 0,
    "O" : 0.083,
    "P" : 0,
    "Q" : 0.083,
    "R" : 0,
    "S" : 0,
    "T" : 0.083,
    "U" : 0.083,
    "V" : 0.083,
    "W" : 0,
    "X" : 0.083,
    "Y" : 0,
    "Z" : 0,
            })


    def test4(self):
        self.assertEqual((chi_sq({
    "A" : 1,
    "B" : 0,
    "C" : 0,
    "D" : 1,
    "E" : 1,
    "F" : 0,
    "G" : 1,
    "H" : 0,
    "I" : 0,
    "J" : 1,
    "K" : 0,
    "L" : 1,
    "M" : 0,
    "N" : 0,
    "O" : 1,
    "P" : 0,
    "Q" : 1,
    "R" : 0,
    "S" : 0,
    "T" : 1,
    "U" : 1,
    "V" : 1,
    "W" : 0,
    "X" : 1,
    "Y" : 0,
    "Z" : 0,
            }, 12)), 205.8291763674632)

    def test5(self):
        self.assertEqual(decKey(1), {
    "A" : "z",
    "B" : "a",
    "C" : "b",
    "D" : "c",
    "E" : "d",
    "F" : "e",
    "G" : "f",
    "H" : "g",
    "I" : "h",
    "J" : "i",
    "K" : "j",
    "L" : "k",
    "M" : "l",
    "N" : "m",
    "O" : "n",
    "P" : "o",
    "Q" : "p",
    "R" : "q",
    "S" : "r",
    "T" : "s",
    "U" : "t",
    "V" : "u",
    "W" : "v",
    "X" : "w",
    "Y" : "x",
    "Z" : "y",
            })

    def test6(self):
        self.assertEqual(decode(decode("Qetuoadgjlxv", 12), 14), "qetuoadgjlxv")

    def test7(self):
        self.assertEqual(columns("qetuoadgjlxv", 3), ["qudl", "eogx", "tajv"])

if __name__ == '__main__':
    unittest.main()

